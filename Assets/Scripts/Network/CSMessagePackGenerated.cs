// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(10)
            {
                { typeof(global::GatewayServer.Packet.PKTNTFLobbyChat), 0 },
                { typeof(global::GatewayServer.Packet.PKTNTFMatchingResult), 1 },
                { typeof(global::GatewayServer.Packet.PKTReqLobbyChat), 2 },
                { typeof(global::GatewayServer.Packet.PKTReqLobbyEnter), 3 },
                { typeof(global::GatewayServer.Packet.PKTReqLogin), 4 },
                { typeof(global::GatewayServer.Packet.PKTReqMatching), 5 },
                { typeof(global::GatewayServer.Packet.PKTReqRoomEnter), 6 },
                { typeof(global::GatewayServer.Packet.PKTResLobbyEnter), 7 },
                { typeof(global::GatewayServer.Packet.PKTResLogin), 8 },
                { typeof(global::GatewayServer.Packet.PKTResRoomEnter), 9 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new MessagePack.Formatters.GatewayServer.Packet.PKTNTFLobbyChatFormatter();
                case 1: return new MessagePack.Formatters.GatewayServer.Packet.PKTNTFMatchingResultFormatter();
                case 2: return new MessagePack.Formatters.GatewayServer.Packet.PKTReqLobbyChatFormatter();
                case 3: return new MessagePack.Formatters.GatewayServer.Packet.PKTReqLobbyEnterFormatter();
                case 4: return new MessagePack.Formatters.GatewayServer.Packet.PKTReqLoginFormatter();
                case 5: return new MessagePack.Formatters.GatewayServer.Packet.PKTReqMatchingFormatter();
                case 6: return new MessagePack.Formatters.GatewayServer.Packet.PKTReqRoomEnterFormatter();
                case 7: return new MessagePack.Formatters.GatewayServer.Packet.PKTResLobbyEnterFormatter();
                case 8: return new MessagePack.Formatters.GatewayServer.Packet.PKTResLoginFormatter();
                case 9: return new MessagePack.Formatters.GatewayServer.Packet.PKTResRoomEnterFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name




// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.GatewayServer.Packet
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class PKTNTFLobbyChatFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTNTFLobbyChat>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTNTFLobbyChat value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.Chat, options);
        }

        public global::GatewayServer.Packet.PKTNTFLobbyChat Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Chat__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Chat__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTNTFLobbyChat();
            ____result.Chat = __Chat__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTNTFMatchingResultFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTNTFMatchingResult>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTNTFMatchingResult value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::GatewayServer.Packet.PKTNTFMatchingResult Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(ushort);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadUInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTNTFMatchingResult();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqLobbyChatFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTReqLobbyChat>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTReqLobbyChat value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.Chat, options);
        }

        public global::GatewayServer.Packet.PKTReqLobbyChat Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Chat__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Chat__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTReqLobbyChat();
            ____result.Chat = __Chat__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqLobbyEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTReqLobbyEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTReqLobbyEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.AuthToken, options);
        }

        public global::GatewayServer.Packet.PKTReqLobbyEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __AuthToken__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __AuthToken__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTReqLobbyEnter();
            ____result.AuthToken = __AuthToken__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqLoginFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTReqLogin>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTReqLogin value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UserID, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.AuthToken, options);
            writer.Write(value.UniqueIndex);
        }

        public global::GatewayServer.Packet.PKTReqLogin Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(string);
            var __AuthToken__ = default(string);
            var __UniqueIndex__ = default(ulong);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __AuthToken__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __UniqueIndex__ = reader.ReadUInt64();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTReqLogin();
            ____result.UserID = __UserID__;
            ____result.AuthToken = __AuthToken__;
            ____result.UniqueIndex = __UniqueIndex__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqMatchingFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTReqMatching>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTReqMatching value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.MatchingType);
        }

        public global::GatewayServer.Packet.PKTReqMatching Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __MatchingType__ = default(byte);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __MatchingType__ = reader.ReadByte();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTReqMatching();
            ____result.MatchingType = __MatchingType__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTReqRoomEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTReqRoomEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTReqRoomEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.AuthToken, options);
        }

        public global::GatewayServer.Packet.PKTReqRoomEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __AuthToken__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __AuthToken__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTReqRoomEnter();
            ____result.AuthToken = __AuthToken__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTResLobbyEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTResLobbyEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTResLobbyEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::GatewayServer.Packet.PKTResLobbyEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(ushort);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadUInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTResLobbyEnter();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTResLoginFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTResLogin>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTResLogin value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::GatewayServer.Packet.PKTResLogin Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(ushort);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadUInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTResLogin();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class PKTResRoomEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::GatewayServer.Packet.PKTResRoomEnter>
    {


        public void Serialize(ref MessagePackWriter writer, global::GatewayServer.Packet.PKTResRoomEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.Result);
        }

        public global::GatewayServer.Packet.PKTResRoomEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Result__ = default(ushort);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __Result__ = reader.ReadUInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::GatewayServer.Packet.PKTResRoomEnter();
            ____result.Result = __Result__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

